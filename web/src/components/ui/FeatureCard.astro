---
// src/components/ui/FeatureCard.astro
interface Props {
  title: string;
  description: string;
  icon: string;
  color?: 'indigo' | 'pink' | 'blue' | 'green' | 'purple' | 'red' | 'amber' | 'rose' | 'emerald' | 'yellow' | 'cyan' | 'teal' | 'fuchsia' | 'sky' | 'violet';
}

const { 
  title, 
  description, 
  icon,
  color = 'indigo'
} = Astro.props as Props;

const colorMap = {
  indigo: {
    bg: 'bg-indigo-500/10',
    text: 'text-indigo-400',
    border: 'border-indigo-500/30',
    hover: 'hover:border-indigo-500/50',
    hoverBg: 'hover:bg-indigo-500/20',
  },
  pink: {
    bg: 'bg-pink-500/10',
    text: 'text-pink-400',
    border: 'border-pink-500/30',
    hover: 'hover:border-pink-500/50',
    hoverBg: 'hover:bg-pink-500/20',
  },
  blue: {
    bg: 'bg-blue-500/10',
    text: 'text-blue-400',
    border: 'border-blue-500/30',
    hover: 'hover:border-blue-500/50',
    hoverBg: 'hover:bg-blue-500/20',
  },
  green: {
    bg: 'bg-green-500/10',
    text: 'text-green-400',
    border: 'border-green-500/30',
    hover: 'hover:border-green-500/50',
    hoverBg: 'hover:bg-green-500/20',
  },
  purple: {
    bg: 'bg-purple-500/10',
    text: 'text-purple-400',
    border: 'border-purple-500/30',
    hover: 'hover:border-purple-500/50',
    hoverBg: 'hover:bg-purple-500/20',
  },
  red: {
    bg: 'bg-red-500/10',
    text: 'text-red-400',
    border: 'border-red-500/30',
    hover: 'hover:border-red-500/50',
    hoverBg: 'hover:bg-red-500/20',
  },
  amber: {
    bg: 'bg-amber-500/10',
    text: 'text-amber-400',
    border: 'border-amber-500/30',
    hover: 'hover:border-amber-500/50',
    hoverBg: 'hover:bg-amber-500/20',
  },
  rose: {
    bg: 'bg-rose-500/10',
    text: 'text-rose-400',
    border: 'border-rose-500/30',
    hover: 'hover:border-rose-500/50',
    hoverBg: 'hover:bg-rose-500/20',
  },
  emerald: {
    bg: 'bg-emerald-500/10',
    text: 'text-emerald-400',
    border: 'border-emerald-500/30',
    hover: 'hover:border-emerald-500/50',
    hoverBg: 'hover:bg-emerald-500/20',
  },
  yellow: {
    bg: 'bg-yellow-500/10',
    text: 'text-yellow-400',
    border: 'border-yellow-500/30',
    hover: 'hover:border-yellow-500/50',
    hoverBg: 'hover:bg-yellow-500/20',
  },
  cyan: {
    bg: 'bg-cyan-500/10',
    text: 'text-cyan-400',
    border: 'border-cyan-500/30',
    hover: 'hover:border-cyan-500/50',
    hoverBg: 'hover:bg-cyan-500/20',
  },
  teal: {
    bg: 'bg-teal-500/10',
    text: 'text-teal-400',
    border: 'border-teal-500/30',
    hover: 'hover:border-teal-500/50',
    hoverBg: 'hover:bg-teal-500/20',
  },
  fuchsia: {
    bg: 'bg-fuchsia-500/10',
    text: 'text-fuchsia-400',
    border: 'border-fuchsia-500/30',
    hover: 'hover:border-fuchsia-500/50',
    hoverBg: 'hover:bg-fuchsia-500/20',
  },
  sky: {
    bg: 'bg-sky-500/10',
    text: 'text-sky-400',
    border: 'border-sky-500/30',
    hover: 'hover:border-sky-500/50',
    hoverBg: 'hover:bg-sky-500/20',
  },
  violet: {
    bg: 'bg-violet-500/10',
    text: 'text-violet-400',
    border: 'border-violet-500/30',
    hover: 'hover:border-violet-500/50',
    hoverBg: 'hover:bg-violet-500/20',
  },
};

const colors = colorMap[color];
---

<div 
  class={`group bg-gray-800/50 ${colors.hoverBg} p-6 rounded-xl border ${colors.border} ${colors.hover} transition-all duration-300 h-full flex flex-col`}
>
  <div class="flex items-center mb-4">
    <div class={`w-12 h-12 ${colors.bg} rounded-lg flex items-center justify-center mr-4`}>
      <span class={`text-2xl ${colors.text}`}>
        {icon}
      </span>
    </div>
    <h3 class="text-xl font-bold text-white">{title}</h3>
  </div>
  <p class="text-gray-300 mb-4 flex-grow">{description}</p>
  
  {Astro.slots.has('default') && (
    <div class="mt-auto">
      <slot />
    </div>
  )}
</div>
